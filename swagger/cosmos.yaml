swagger: '2.0'
info:
  title: Cosmos
  description: DC/OS Package and Service
  version: ''
securityDefinitions:
  token:
    type: apiKey
    in: header
    name: Authorization
security:
  - token: []
definitions:
  algo:
    enum:
      - sha256
    type: string
  assets:
    additionalProperties: false
    properties:
      container:
        additionalProperties: false
        properties:
          docker:
            $ref: '#/definitions/docker'
        type: object
      uris:
        $ref: '#/definitions/uris'
    type: object
  base64String:
    pattern: '^([A-Za-z0-9+/]{4})*([A-Za-z0-9+/]{4}|[A-Za-z0-9+/]{3}=|[A-Za-z0-9+/]{2}==)$'
    type: string
  binaries:
    additionalProperties: false
    minProperties: 1
    properties:
      darwin:
        $ref: '#/definitions/os'
      linux:
        $ref: '#/definitions/os'
      windows:
        $ref: '#/definitions/os'
    type: object
  cli:
    additionalProperties: false
    properties:
      binaries:
        $ref: '#/definitions/binaries'
    required:
      - binaries
    type: object
  unitHealth:
    additionalProperties: false
    type: object
    properties:
      id:
        type: string
      name:
        type: string
      health:
        type: integer
      output:
        type: string
      description:
        type: string
      help:
        type: string
  systemHealth:
    additionalProperties: false
    type: object
    properties:
      mesosID:
        type: string
      ip:
        type: string
      hostname:
        type: string
      nodeRole:
        type: string
      dcosVersion:
        type: string
      dcosDiagnosticsVersion:
        type: string
      units:
        type: array
        items:
          $ref: '#/definitions/unitHealth'
  systemNodes:
    additionalProperties: false
    type: object
    properties:
      nodes:
        type: array
        items:
          $ref: '#/definitions/systemNode'
  systemNode:
    additionalProperties: false
    type: object
    properties:
      host_ip:
        type: string
      health:
        type: integer
      role:
        type: string
  phaseStep:
    additionalProperties: false
    type: object
    properties:
      id:
        type: string
      status:
        type: string
      name:
        type: string
      message:
        type: string
  planPhase:
    additionalProperties: false
    type: object
    properties:
      name:
        type: string
      id:
        type: string
      strategy:
        type: string
      status:
        type: string
      steps:
        type: array
        items:
          $ref: '#/definitions/phaseStep'
  planDefinition:
    additionalProperties: false
    type: object
    properties:
      status:
        type: string
      phases:
        type: array
        items:
          $ref: '#/definitions/planPhase'
      errors:
        type: array
        items:
          type: string
    required:
      - status
  cliInfo:
    additionalProperties: false
    properties:
      contentHash:
        items:
          $ref: '#/definitions/hash'
        minItems: 1
        type: array
      kind:
        enum:
          - executable
          - zip
        type: string
      url:
        $ref: '#/definitions/url'
    required:
      - contentHash
      - kind
      - url
    type: object
  command:
    additionalProperties: false
    properties:
      pip:
        description: '[Deprecated v3.x] An array of strings representing of the requirements file to use for installing the subcommand for Pip. Each item is interpreted as a line in the requirements file.'
        items:
          type: string
        type: array
    required:
      - pip
    type: object
  config:
    additionalProperties: true
    type: object
  packageDescribeRequest:
    additionalProperties: false
    properties:
      packageName:
        type: string
      packageVersion:
        type: string
    required:
      - packageName
    type: object
  docker:
    additionalProperties:
      type: string
    type: object
  error:
    additionalProperties: false
    properties:
      type:
        type: string
      message:
        type: string
      data:
        type: object
    required:
      - type
      - message
  hash:
    additionalProperties: false
    properties:
      algo:
        $ref: '#/definitions/algo'
      value:
        type: string
    required:
      - algo
      - value
    type: object
  images:
    additionalProperties: false
    properties:
      icon-large:
        description: 'PNG icon URL, preferably 256 by 256 pixels.'
        type: string
      icon-medium:
        description: 'PNG icon URL, preferably 128 by 128 pixels.'
        type: string
      icon-small:
        description: 'PNG icon URL, preferably 48 by 48 pixels.'
        type: string
      screenshots:
        items:
          description: 'PNG screen URL, preferably 1024 by 1024 pixels.'
          type: string
        type: array
    type: object
  installRequest:
    additionalProperties: false
    properties:
      appId:
        type: string
      options:
        additionalProperties: true
        type: object
      packageName:
        type: string
      packageVersion:
        type: string
    required:
      - packageName
    type: object
  installResponse:
    additionalProperties: false
    properties:
      appId:
        type: string
      cli:
        $ref: '#/definitions/cli'
      packageName:
        type: string
      packageVersion:
        type: string
      postInstallNotes:
        type: string
    required:
      - packageName
      - packageVersion
    type: object
  searchRequest:
    additionalProperties: false
    properties:
      query:
        type: string
    type: object
  searchResponse:
    additionalProperties: false
    properties:
      packages:
        type: array
        items:
          $ref: '#/definitions/packageSearchDetails'
  packageSearchDetails:
    additionalProperties: false
    type: object
    properties:
      name:
        type: "string"
      currentVersion:
        type: "string"
      description:
        type: "string"
      framework:
        type: "boolean"
      selected:
        type: "boolean"
      images:
        $ref: '#/definitions/images'
      tags:
        items:
          pattern: '^[^\s]+$'
          type: string
        type: array
      versions:
        type: "array"
        items:
          type: "string"
    required:
      - name
      - currentVersion
      - versions
      - description
      - framework
      - tags
  serviceUpdateRequest:
    additionalProperties: false
    properties:
      appId:
        type: string
      options:
        additionalProperties: true
        type: object
      packageName:
        type: string
      packageVersion:
        type: string
      replace:
        description: If true any stored configuration will be ignored when producing the updated service configuration.
        type: boolean
    required:
      - appId
      - replace
    type: object
  serviceUpdateResponse:
    additionalProperties: false
    properties:
      marathonDeploymentId:
        type: string
      package:
        $ref: '#/definitions/v50PackageDefinition'
      resolvedOptions:
        additionalProperties: true
        description: The result of merging the default package options with the user supplied options
        type: object
    required:
      - marathonDeploymentId
      - package
      - resolvedOptions
    type: object
  uninstallRequest:
    additionalProperties: false
    properties:
      appId:
        type: string
      packageName:
        type: string
      all:
        type: boolean
    required:
      - packageName
    type: object
  uninstallResponse:
    additionalProperties: false
    properties:
      appId:
        type: string
      packageName:
        type: string
      packageVersion:
        type: string
      postUninstallNotes:
        type: string
    required:
      - packageName
      - appId
    type: object
  kubernetesAuthDataResponse:
    additionalProperties: false
    properties:
      caCrt:
        type: string
      token:
        type: string
    required:
      - caCrt
      - token
    type: object
  licence:
    additionalProperties: false
    properties:
      name:
        description: 'The name of the license. For example one of [Apache License Version 2.0 | MIT License | BSD License | Proprietary]'
        type: string
      url:
        $ref: '#/definitions/url'
    required:
      - name
      - url
    type: object
  licences:
    items:
      $ref: '#/definitions/licence'
    type: array
  marathon:
    additionalProperties: false
    properties:
      v2AppMustacheTemplate:
        $ref: '#/definitions/base64String'
    required:
      - v2AppMustacheTemplate
    type: object
  os:
    additionalProperties: false
    properties:
      x86-64:
        $ref: '#/definitions/cliInfo'
    required:
      - x86-64
    type: object
  packageDetails:
    additionalProperties: false
    properties:
      description:
        type: string
      framework:
        default: false
        description: True if this package installs a new Mesos framework.
        type: boolean
      licenses:
        $ref: '#/definitions/licences'
      maintainer:
        type: string
      name:
        type: string
      packagingVersion:
        type: string
      postInstallNotes:
        description: Post installation notes that would be useful to the user of this package.
        type: string
      postUninstallNotes:
        description: Post uninstallation notes that would be useful to the user of this package.
        type: string
      preInstallNotes:
        description: Pre installation notes that would be useful to the user of this package.
        type: string
      releaseVersion:
        description: Corresponds to the revision index from the universe directory structure
        minimum: 0
        type: integer
      scm:
        type: string
      selected:
        default: false
        description: Flag indicating if the package is selected in search results
        type: boolean
      tags:
        items:
          pattern: '^[^\s]+$'
          type: string
        type: array
      version:
        type: string
      website:
        type: string
    required:
      - description
      - maintainer
      - name
      - packagingVersion
      - tags
      - version
    type: object
  serviceDescribeRequest:
    additionalProperties: false
    properties:
      appId:
        type: string
      managerId:
        type: string
    required:
      - appId
      - managerId
    type: object
  packageDeleteRepoRequest:
    additionalProperties: false
    properties:
      name:
        type: string
      uri:
        $ref: '#/definitions/url'
    type: object
  packageDeleteRepoResponse:
    additionalProperties: false
    properties:
      repositories:
        type: array
        items:
          $ref: '#/definitions/pkgRepo'
    required:
      - repositories
    type: object
  packageAddRepoRequest:
    additionalProperties: false
    properties:
      name:
        type: string
      uri:
        $ref: '#/definitions/url'
      index:
        type: integer
        minimum: 0
    required:
      - name
      - uri
    type: object
  packageAddRepoResponse:
    additionalProperties: false
    properties:
      repositories:
        type: array
        items:
          $ref: '#/definitions/pkgRepo'
    required:
      - repositories
    type: object
  serviceDescribeResponse:
    additionalProperties: false
    properties:
      downgradesTo:
        items:
          type: string
        type: array
      package:
        $ref: '#/definitions/v50PackageDefinition'
      resolvedOptions:
        additionalProperties: true
        description: The result of merging the default package options with the user supplied options
        type: object
      upgradesTo:
        items:
          type: string
        type: array
      userProvidedOptions:
        additionalProperties: true
        description: The options the user provided to run the service
        type: object
    required:
      - downgradesTo
      - package
      - upgradesTo
    type: object
  uris:
    additionalProperties:
      type: string
    type: object
  url:
    format: uri
    pattern: '^https?://'
    type: string
  pkgRepo:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
      uri:
        $ref: '#/definitions/url'
    required:
      - name
      - uri
  v30Resource:
    additionalProperties: false
    properties:
      assets:
        $ref: '#/definitions/assets'
      cli:
        $ref: '#/definitions/cli'
      images:
        $ref: '#/definitions/images'
    type: object
  v3PackageDescribeResponse:
    additionalProperties: false
    properties:
      package:
        $ref: '#/definitions/v50PackageDefinition'
    required:
      - package
    type: object
  v50PackageDefinition:
    additionalProperties: false
    properties:
      command:
        $ref: '#/definitions/command'
      config:
        $ref: '#/definitions/config'
      description:
        type: string
      downgradesTo:
        description: 'List of versions that this package can downgrade to. If the property is a list containing the string ''*'', this package can downgrade to any version. If the property is not set or the empty list, this package cannot downgrade.'
        items:
          type: string
        type: array
      framework:
        default: false
        description: True if this package installs a new Mesos framework.
        type: boolean
      licenses:
        $ref: '#/definitions/licences'
      maintainer:
        type: string
      marathon:
        $ref: '#/definitions/marathon'
      minDcosReleaseVersion:
        description: The minimum DC/OS Release Version the package can run on.
        pattern: '^(?:0|[1-9][0-9]*)(?:\.(?:0|[1-9][0-9]*))*$'
        type: string
      name:
        type: string
      packagingVersion:
        enum:
          - '5.0'
        type: string
      postInstallNotes:
        description: Post installation notes that would be useful to the user of this package.
        type: string
      postUninstallNotes:
        description: Post uninstallation notes that would be useful to the user of this package.
        type: string
      preInstallNotes:
        description: Pre installation notes that would be useful to the user of this package.
        type: string
      releaseVersion:
        description: Corresponds to the revision index from the universe directory structure
        minimum: 0
        type: integer
      resource:
        $ref: '#/definitions/v30Resource'
      scm:
        type: string
      selected:
        default: false
        description: Flag indicating if the package is selected in search results
        type: boolean
      tags:
        items:
          pattern: '^[^\s]+$'
          type: string
        type: array
      upgradesFrom:
        description: 'List of versions that can upgrade to this package. If the property is a list containing the string ''*'', any version can upgrade to this package. If the property is not set or the empty list, no version can upgrade to this package.'
        items:
          type: string
        type: array
      version:
        pattern: '^[-a-zA-Z0-9.]+$'
        type: string
      website:
        type: string
      manager:
        $ref: '#/definitions/manager'
    required:
      - description
      - maintainer
      - name
      - packagingVersion
      - releaseVersion
      - tags
      - version
    type: object
  manager:
    additionalProperties: false
    properties:
      packageName:
        type: string
      minPackageVersion:
        type: string
    required:
      - packageName
    type: object
paths:
  /system/health/v1:
    get:
      description: DC/OS system health.
      operationId: dcos-system-health
      produces:
        - application/json
      consumes:
        - application/json
      parameters: []
      tags: []
      responses:
        '200':
          description: System is healthy.
          schema:
            $ref: '#/definitions/systemHealth'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/error'
  /service/{appId}/v1/health:
    get:
      description: Healthcheck service.
      operationId: healthchech-service
      produces:
        - text/plain
      consumes:
        - text/plain
      parameters:
        - name: appId
          in: path
          required: true
          type: string
      tags: []
      responses:
        '200':
          description: Service is healthy.
        '404':
          description: Service not found.
          schema:
            $ref: '#/definitions/error'
  /system/health/v1/nodes:
    get:
      description: DC/OS nodes.
      operationId: dcos-system-nodes
      produces:
        - application/json
      consumes:
        - application/json
      parameters: []
      tags: []
      responses:
        '200':
          description: The nodes.
          schema:
            $ref: '#/definitions/systemNodes'
        default:
          description: Unexpected error.
          schema:
            $ref: '#/definitions/error'
  /service/{appId}/v1/plans/{plan}:
    get:
      description: Service plan.
      operationId: service-plan
      produces:
        - application/json
      consumes:
        - application/json
      parameters:
        - name: appId
          in: path
          required: true
          type: string
        - name: plan
          in: path
          required: true
          type: string
      tags: []
      responses:
        '200':
          description: Service plan.
          schema:
            $ref: '#/definitions/planDefinition'
        '404':
          description: Service plan not found.
          schema:
            $ref: '#/definitions/error'
  /package/repository/delete:
    post:
      operationId: package-repository-delete
      description: Deletes a package repository (for example Universe) from DC/OS.
      consumes:
        - application/vnd.dcos.package.repository.delete-request+json;charset=utf-8;version=v1
      produces:
        - application/vnd.dcos.package.repository.delete-response+json;charset=utf-8;version=v1
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/packageDeleteRepoRequest'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/packageDeleteRepoResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/error'
        '404':
          description: ''
          schema:
            $ref: '#/definitions/error'
  /package/repository/add:
    post:
      operationId: package-repository-add
      description: |
        Adds a package repository (for example Universe) for use by DC/OS. To add a package
        repository to the beginning of the list set the index to zero (0). To add a package
        repository to the end of the list do not specify an index.
      consumes:
        - application/vnd.dcos.package.repository.add-request+json;charset=utf-8;version=v1
      produces:
        - application/vnd.dcos.package.repository.add-response+json;charset=utf-8;version=v1
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/packageAddRepoRequest'
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/packageAddRepoResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/error'
        '409':
          description: ''
          schema:
            $ref: '#/definitions/error'
  /cosmos/service/describe:
    post:
      consumes:
        - application/vnd.dcos.service.describe-request+json;charset=utf-8;version=v1
      description: Describes a DC/OS Service
      operationId: service-describe
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/serviceDescribeRequest'
      produces:
        - application/vnd.dcos.service.describe-response+json;charset=utf-8;version=v1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/serviceDescribeResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/error'
  /package/describe:
    post:
      consumes:
        - application/vnd.dcos.package.describe-request+json;charset=utf-8;version=v1
      description: 'Show information about the package, including the required resources and configuration to start the service, and command line extensions that are included with the package.'
      operationId: package-describe
      parameters:
        - in: body
          name: body
          schema:
            $ref: '#/definitions/packageDescribeRequest'
      produces:
        - application/vnd.dcos.package.describe-response+json;charset=utf-8;version=v3
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/v3PackageDescribeResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/error'
  /package/uninstall:
      post:
        operationId: package-uninstall
        consumes:
          - application/vnd.dcos.package.uninstall-request+json;charset=utf-8;version=v1
        produces:
          - application/vnd.dcos.package.uninstall-response+json;charset=utf-8;version=v1
        parameters:
          - in: body
            name: body
            required: true
            schema:
              $ref: '#/definitions/uninstallRequest'
          - name: Accept
            in: header
            required: false
            enum:
              - application/vnd.dcos.package.uninstall-response+json;charset=utf-8;version=v1
            type: string
        responses:
          '200':
            description: ''
            schema:
              $ref: '#/definitions/uninstallResponse'
          '400':
            description: ''
            schema:
              $ref: '#/definitions/error'
          '404':
            description: ''
            schema:
              $ref: '#/definitions/error'
          '409':
            description: ''
            schema:
              $ref: '#/definitions/error'
  /package/install:
    post:
      consumes:
        - application/vnd.dcos.package.install-request+json;charset=utf-8;version=v1
      description: Runs a service from a Universe package.
      operationId: package-install
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/installRequest'
      produces:
        - application/vnd.dcos.package.install-response+json;charset=utf-8;version=v1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/installResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/error'
        '409':
          description: ''
          schema:
            $ref: '#/definitions/error'
  /package/search:
    post:
      operationId: package-search
      description: |
        Lists all matching packages in the repository given a partial pattern.
        The character \'\*\' can be used to match any number of characters.
      consumes:
        - application/vnd.dcos.package.search-request+json;charset=utf-8;version=v1
      produces:
        - application/vnd.dcos.package.search-response+json;charset=utf-8;version=v1
      parameters:
        - name: body
          in: body
          required: true
          schema:
            $ref: '#/definitions/searchRequest'
        - name: Accept
          in: header
          required: false
          enum:
            - application/vnd.dcos.package.search-response+json;charset=utf-8;version=v1
          type: string
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/searchResponse'
  /service/{appId}/v1/auth/data:
    get:
      description: Kuberentes Auth Data
      operationId: kubernetes-auth-data
      produces:
        - text/plain
      consumes:
        - text/plain
      parameters:
        - name: appId
          in: path
          required: true
          type: string
      tags: []
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/kubernetesAuthDataResponse'
        '404':
          description: Service not found.
          schema:
            $ref: '#/definitions/error'
  /cosmos/service/update:
    post:
      consumes:
        - application/vnd.dcos.service.update-request+json;charset=utf-8;version=v1
      description: Runs a service update.
      operationId: service-update
      parameters:
        - in: body
          name: body
          required: true
          schema:
            $ref: '#/definitions/serviceUpdateRequest'
      produces:
        - application/vnd.dcos.service.update-response+json;charset=utf-8;version=v1
      responses:
        '200':
          description: ''
          schema:
            $ref: '#/definitions/serviceUpdateResponse'
        '400':
          description: ''
          schema:
            $ref: '#/definitions/error'
        '404':
          description: ''
          schema:
            $ref: '#/definitions/error'
        '409':
          description: ''
          schema:
            $ref: '#/definitions/error'
