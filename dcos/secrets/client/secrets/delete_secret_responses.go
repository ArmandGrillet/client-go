// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// DeleteSecretReader is a Reader for the DeleteSecret structure.
type DeleteSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DeleteSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 204:
		result := NewDeleteSecretNoContent()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 403:
		result := NewDeleteSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewDeleteSecretNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewDeleteSecretNoContent creates a DeleteSecretNoContent with default headers values
func NewDeleteSecretNoContent() *DeleteSecretNoContent {
	return &DeleteSecretNoContent{}
}

/*DeleteSecretNoContent handles this case with default header values.

Success.
*/
type DeleteSecretNoContent struct {
}

func (o *DeleteSecretNoContent) Error() string {
	return fmt.Sprintf("[DELETE /secret/{store}/{path-to-secret}][%d] deleteSecretNoContent ", 204)
}

func (o *DeleteSecretNoContent) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSecretForbidden creates a DeleteSecretForbidden with default headers values
func NewDeleteSecretForbidden() *DeleteSecretForbidden {
	return &DeleteSecretForbidden{}
}

/*DeleteSecretForbidden handles this case with default header values.

Forbidden.
*/
type DeleteSecretForbidden struct {
}

func (o *DeleteSecretForbidden) Error() string {
	return fmt.Sprintf("[DELETE /secret/{store}/{path-to-secret}][%d] deleteSecretForbidden ", 403)
}

func (o *DeleteSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewDeleteSecretNotFound creates a DeleteSecretNotFound with default headers values
func NewDeleteSecretNotFound() *DeleteSecretNotFound {
	return &DeleteSecretNotFound{}
}

/*DeleteSecretNotFound handles this case with default header values.

Secret not found.
*/
type DeleteSecretNotFound struct {
}

func (o *DeleteSecretNotFound) Error() string {
	return fmt.Sprintf("[DELETE /secret/{store}/{path-to-secret}][%d] deleteSecretNotFound ", 404)
}

func (o *DeleteSecretNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
