// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/dcos/client-go/dcos/secrets/models"
)

// NewPutSecretStorePathToSecretParams creates a new PutSecretStorePathToSecretParams object
// with the default values initialized.
func NewPutSecretStorePathToSecretParams() *PutSecretStorePathToSecretParams {
	var ()
	return &PutSecretStorePathToSecretParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutSecretStorePathToSecretParamsWithTimeout creates a new PutSecretStorePathToSecretParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutSecretStorePathToSecretParamsWithTimeout(timeout time.Duration) *PutSecretStorePathToSecretParams {
	var ()
	return &PutSecretStorePathToSecretParams{

		timeout: timeout,
	}
}

// NewPutSecretStorePathToSecretParamsWithContext creates a new PutSecretStorePathToSecretParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutSecretStorePathToSecretParamsWithContext(ctx context.Context) *PutSecretStorePathToSecretParams {
	var ()
	return &PutSecretStorePathToSecretParams{

		Context: ctx,
	}
}

// NewPutSecretStorePathToSecretParamsWithHTTPClient creates a new PutSecretStorePathToSecretParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutSecretStorePathToSecretParamsWithHTTPClient(client *http.Client) *PutSecretStorePathToSecretParams {
	var ()
	return &PutSecretStorePathToSecretParams{
		HTTPClient: client,
	}
}

/*PutSecretStorePathToSecretParams contains all the parameters to send to the API endpoint
for the put secret store path to secret operation typically these are written to a http.Request
*/
type PutSecretStorePathToSecretParams struct {

	/*Body
	  Secret value.

	*/
	Body *models.Secret
	/*PathToSecret
	  The path to store the secret in.

	*/
	PathToSecret string
	/*Store
	  The backend to store the secret in.

	*/
	Store string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put secret store path to secret params
func (o *PutSecretStorePathToSecretParams) WithTimeout(timeout time.Duration) *PutSecretStorePathToSecretParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put secret store path to secret params
func (o *PutSecretStorePathToSecretParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put secret store path to secret params
func (o *PutSecretStorePathToSecretParams) WithContext(ctx context.Context) *PutSecretStorePathToSecretParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put secret store path to secret params
func (o *PutSecretStorePathToSecretParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put secret store path to secret params
func (o *PutSecretStorePathToSecretParams) WithHTTPClient(client *http.Client) *PutSecretStorePathToSecretParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put secret store path to secret params
func (o *PutSecretStorePathToSecretParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the put secret store path to secret params
func (o *PutSecretStorePathToSecretParams) WithBody(body *models.Secret) *PutSecretStorePathToSecretParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the put secret store path to secret params
func (o *PutSecretStorePathToSecretParams) SetBody(body *models.Secret) {
	o.Body = body
}

// WithPathToSecret adds the pathToSecret to the put secret store path to secret params
func (o *PutSecretStorePathToSecretParams) WithPathToSecret(pathToSecret string) *PutSecretStorePathToSecretParams {
	o.SetPathToSecret(pathToSecret)
	return o
}

// SetPathToSecret adds the pathToSecret to the put secret store path to secret params
func (o *PutSecretStorePathToSecretParams) SetPathToSecret(pathToSecret string) {
	o.PathToSecret = pathToSecret
}

// WithStore adds the store to the put secret store path to secret params
func (o *PutSecretStorePathToSecretParams) WithStore(store string) *PutSecretStorePathToSecretParams {
	o.SetStore(store)
	return o
}

// SetStore adds the store to the put secret store path to secret params
func (o *PutSecretStorePathToSecretParams) SetStore(store string) {
	o.Store = store
}

// WriteToRequest writes these params to a swagger request
func (o *PutSecretStorePathToSecretParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param path-to-secret
	if err := r.SetPathParam("path-to-secret", o.PathToSecret); err != nil {
		return err
	}

	// path param store
	if err := r.SetPathParam("store", o.Store); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
