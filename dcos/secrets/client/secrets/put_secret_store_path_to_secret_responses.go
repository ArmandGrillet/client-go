// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PutSecretStorePathToSecretReader is a Reader for the PutSecretStorePathToSecret structure.
type PutSecretStorePathToSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutSecretStorePathToSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPutSecretStorePathToSecretCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPutSecretStorePathToSecretBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewPutSecretStorePathToSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewPutSecretStorePathToSecretConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutSecretStorePathToSecretCreated creates a PutSecretStorePathToSecretCreated with default headers values
func NewPutSecretStorePathToSecretCreated() *PutSecretStorePathToSecretCreated {
	return &PutSecretStorePathToSecretCreated{}
}

/*PutSecretStorePathToSecretCreated handles this case with default header values.

Secret created.
*/
type PutSecretStorePathToSecretCreated struct {
}

func (o *PutSecretStorePathToSecretCreated) Error() string {
	return fmt.Sprintf("[PUT /secret/{store}/{path-to-secret}][%d] putSecretStorePathToSecretCreated ", 201)
}

func (o *PutSecretStorePathToSecretCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecretStorePathToSecretBadRequest creates a PutSecretStorePathToSecretBadRequest with default headers values
func NewPutSecretStorePathToSecretBadRequest() *PutSecretStorePathToSecretBadRequest {
	return &PutSecretStorePathToSecretBadRequest{}
}

/*PutSecretStorePathToSecretBadRequest handles this case with default header values.

Unsupported Content-Type header.
*/
type PutSecretStorePathToSecretBadRequest struct {
}

func (o *PutSecretStorePathToSecretBadRequest) Error() string {
	return fmt.Sprintf("[PUT /secret/{store}/{path-to-secret}][%d] putSecretStorePathToSecretBadRequest ", 400)
}

func (o *PutSecretStorePathToSecretBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecretStorePathToSecretForbidden creates a PutSecretStorePathToSecretForbidden with default headers values
func NewPutSecretStorePathToSecretForbidden() *PutSecretStorePathToSecretForbidden {
	return &PutSecretStorePathToSecretForbidden{}
}

/*PutSecretStorePathToSecretForbidden handles this case with default header values.

Forbidden.
*/
type PutSecretStorePathToSecretForbidden struct {
}

func (o *PutSecretStorePathToSecretForbidden) Error() string {
	return fmt.Sprintf("[PUT /secret/{store}/{path-to-secret}][%d] putSecretStorePathToSecretForbidden ", 403)
}

func (o *PutSecretStorePathToSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutSecretStorePathToSecretConflict creates a PutSecretStorePathToSecretConflict with default headers values
func NewPutSecretStorePathToSecretConflict() *PutSecretStorePathToSecretConflict {
	return &PutSecretStorePathToSecretConflict{}
}

/*PutSecretStorePathToSecretConflict handles this case with default header values.

Secret already exists.
*/
type PutSecretStorePathToSecretConflict struct {
}

func (o *PutSecretStorePathToSecretConflict) Error() string {
	return fmt.Sprintf("[PUT /secret/{store}/{path-to-secret}][%d] putSecretStorePathToSecretConflict ", 409)
}

func (o *PutSecretStorePathToSecretConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
