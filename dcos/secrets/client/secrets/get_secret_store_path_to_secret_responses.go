// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/dcos/client-go/dcos/secrets/models"
)

// GetSecretStorePathToSecretReader is a Reader for the GetSecretStorePathToSecret structure.
type GetSecretStorePathToSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetSecretStorePathToSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 200:
		result := NewGetSecretStorePathToSecretOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewGetSecretStorePathToSecretBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewGetSecretStorePathToSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 404:
		result := NewGetSecretStorePathToSecretNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetSecretStorePathToSecretOK creates a GetSecretStorePathToSecretOK with default headers values
func NewGetSecretStorePathToSecretOK() *GetSecretStorePathToSecretOK {
	return &GetSecretStorePathToSecretOK{}
}

/*GetSecretStorePathToSecretOK handles this case with default header values.

Response body contains secret authorized content.
*/
type GetSecretStorePathToSecretOK struct {
	Payload *models.Secret
}

func (o *GetSecretStorePathToSecretOK) Error() string {
	return fmt.Sprintf("[GET /secret/{store}/{path-to-secret}][%d] getSecretStorePathToSecretOK  %+v", 200, o.Payload)
}

func (o *GetSecretStorePathToSecretOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Secret)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewGetSecretStorePathToSecretBadRequest creates a GetSecretStorePathToSecretBadRequest with default headers values
func NewGetSecretStorePathToSecretBadRequest() *GetSecretStorePathToSecretBadRequest {
	return &GetSecretStorePathToSecretBadRequest{}
}

/*GetSecretStorePathToSecretBadRequest handles this case with default header values.

Unsupported Accept header.
*/
type GetSecretStorePathToSecretBadRequest struct {
}

func (o *GetSecretStorePathToSecretBadRequest) Error() string {
	return fmt.Sprintf("[GET /secret/{store}/{path-to-secret}][%d] getSecretStorePathToSecretBadRequest ", 400)
}

func (o *GetSecretStorePathToSecretBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSecretStorePathToSecretForbidden creates a GetSecretStorePathToSecretForbidden with default headers values
func NewGetSecretStorePathToSecretForbidden() *GetSecretStorePathToSecretForbidden {
	return &GetSecretStorePathToSecretForbidden{}
}

/*GetSecretStorePathToSecretForbidden handles this case with default header values.

Forbidden.
*/
type GetSecretStorePathToSecretForbidden struct {
}

func (o *GetSecretStorePathToSecretForbidden) Error() string {
	return fmt.Sprintf("[GET /secret/{store}/{path-to-secret}][%d] getSecretStorePathToSecretForbidden ", 403)
}

func (o *GetSecretStorePathToSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetSecretStorePathToSecretNotFound creates a GetSecretStorePathToSecretNotFound with default headers values
func NewGetSecretStorePathToSecretNotFound() *GetSecretStorePathToSecretNotFound {
	return &GetSecretStorePathToSecretNotFound{}
}

/*GetSecretStorePathToSecretNotFound handles this case with default header values.

Secret not found.
*/
type GetSecretStorePathToSecretNotFound struct {
}

func (o *GetSecretStorePathToSecretNotFound) Error() string {
	return fmt.Sprintf("[GET /secret/{store}/{path-to-secret}][%d] getSecretStorePathToSecretNotFound ", 404)
}

func (o *GetSecretStorePathToSecretNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
