// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/dcos/client-go/dcos/secrets/models"
)

// NewUpdateSecretParams creates a new UpdateSecretParams object
// with the default values initialized.
func NewUpdateSecretParams() *UpdateSecretParams {
	var ()
	return &UpdateSecretParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewUpdateSecretParamsWithTimeout creates a new UpdateSecretParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewUpdateSecretParamsWithTimeout(timeout time.Duration) *UpdateSecretParams {
	var ()
	return &UpdateSecretParams{

		timeout: timeout,
	}
}

// NewUpdateSecretParamsWithContext creates a new UpdateSecretParams object
// with the default values initialized, and the ability to set a context for a request
func NewUpdateSecretParamsWithContext(ctx context.Context) *UpdateSecretParams {
	var ()
	return &UpdateSecretParams{

		Context: ctx,
	}
}

// NewUpdateSecretParamsWithHTTPClient creates a new UpdateSecretParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewUpdateSecretParamsWithHTTPClient(client *http.Client) *UpdateSecretParams {
	var ()
	return &UpdateSecretParams{
		HTTPClient: client,
	}
}

/*UpdateSecretParams contains all the parameters to send to the API endpoint
for the update secret operation typically these are written to a http.Request
*/
type UpdateSecretParams struct {

	/*Body
	  Secret value.

	*/
	Body *models.Secret
	/*PathToSecret
	  The path for the secret to update.

	*/
	PathToSecret string
	/*Store
	  The backend to store the secret in.

	*/
	Store string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the update secret params
func (o *UpdateSecretParams) WithTimeout(timeout time.Duration) *UpdateSecretParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the update secret params
func (o *UpdateSecretParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the update secret params
func (o *UpdateSecretParams) WithContext(ctx context.Context) *UpdateSecretParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the update secret params
func (o *UpdateSecretParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the update secret params
func (o *UpdateSecretParams) WithHTTPClient(client *http.Client) *UpdateSecretParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the update secret params
func (o *UpdateSecretParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithBody adds the body to the update secret params
func (o *UpdateSecretParams) WithBody(body *models.Secret) *UpdateSecretParams {
	o.SetBody(body)
	return o
}

// SetBody adds the body to the update secret params
func (o *UpdateSecretParams) SetBody(body *models.Secret) {
	o.Body = body
}

// WithPathToSecret adds the pathToSecret to the update secret params
func (o *UpdateSecretParams) WithPathToSecret(pathToSecret string) *UpdateSecretParams {
	o.SetPathToSecret(pathToSecret)
	return o
}

// SetPathToSecret adds the pathToSecret to the update secret params
func (o *UpdateSecretParams) SetPathToSecret(pathToSecret string) {
	o.PathToSecret = pathToSecret
}

// WithStore adds the store to the update secret params
func (o *UpdateSecretParams) WithStore(store string) *UpdateSecretParams {
	o.SetStore(store)
	return o
}

// SetStore adds the store to the update secret params
func (o *UpdateSecretParams) SetStore(store string) {
	o.Store = store
}

// WriteToRequest writes these params to a swagger request
func (o *UpdateSecretParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.Body != nil {
		if err := r.SetBodyParam(o.Body); err != nil {
			return err
		}
	}

	// path param path-to-secret
	if err := r.SetPathParam("path-to-secret", o.PathToSecret); err != nil {
		return err
	}

	// path param store
	if err := r.SetPathParam("store", o.Store); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
