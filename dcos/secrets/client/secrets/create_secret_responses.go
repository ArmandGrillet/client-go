// Code generated by go-swagger; DO NOT EDIT.

package secrets

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// CreateSecretReader is a Reader for the CreateSecret structure.
type CreateSecretReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateSecretReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewCreateSecretCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewCreateSecretBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 403:
		result := NewCreateSecretForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 409:
		result := NewCreateSecretConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewCreateSecretCreated creates a CreateSecretCreated with default headers values
func NewCreateSecretCreated() *CreateSecretCreated {
	return &CreateSecretCreated{}
}

/*CreateSecretCreated handles this case with default header values.

Secret created.
*/
type CreateSecretCreated struct {
}

func (o *CreateSecretCreated) Error() string {
	return fmt.Sprintf("[PUT /secret/{store}/{path-to-secret}][%d] createSecretCreated ", 201)
}

func (o *CreateSecretCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSecretBadRequest creates a CreateSecretBadRequest with default headers values
func NewCreateSecretBadRequest() *CreateSecretBadRequest {
	return &CreateSecretBadRequest{}
}

/*CreateSecretBadRequest handles this case with default header values.

Unsupported Content-Type header.
*/
type CreateSecretBadRequest struct {
}

func (o *CreateSecretBadRequest) Error() string {
	return fmt.Sprintf("[PUT /secret/{store}/{path-to-secret}][%d] createSecretBadRequest ", 400)
}

func (o *CreateSecretBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSecretForbidden creates a CreateSecretForbidden with default headers values
func NewCreateSecretForbidden() *CreateSecretForbidden {
	return &CreateSecretForbidden{}
}

/*CreateSecretForbidden handles this case with default header values.

Forbidden.
*/
type CreateSecretForbidden struct {
}

func (o *CreateSecretForbidden) Error() string {
	return fmt.Sprintf("[PUT /secret/{store}/{path-to-secret}][%d] createSecretForbidden ", 403)
}

func (o *CreateSecretForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewCreateSecretConflict creates a CreateSecretConflict with default headers values
func NewCreateSecretConflict() *CreateSecretConflict {
	return &CreateSecretConflict{}
}

/*CreateSecretConflict handles this case with default header values.

Secret already exists.
*/
type CreateSecretConflict struct {
}

func (o *CreateSecretConflict) Error() string {
	return fmt.Sprintf("[PUT /secret/{store}/{path-to-secret}][%d] createSecretConflict ", 409)
}

func (o *CreateSecretConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
