openapi: 3.0.0
info:
  title: ' DC/OS Secrets API'
  version: 1.0.0
servers:
- url: /secrets/v1
security:
- token: []
tags:
- description: Secret stores related API endpoints
  name: backend
- description: Secrets manipulation
  name: secrets
paths:
  /secret/{store}/{path-to-secret}:
    delete:
      description: Delete a secret.
      operationId: delete-secret
      parameters:
      - description: The backend to delete the secret from.
        explode: false
        in: path
        name: store
        required: true
        schema:
          type: string
        style: simple
      - description: The path to the secret to delete.
        explode: false
        in: path
        name: path-to-secret
        required: true
        schema:
          type: string
        style: simple
      responses:
        204:
          description: Success.
        403:
          description: Forbidden.
        404:
          description: Secret not found.
      summary: Delete a secret.
      tags:
      - secrets
    get:
      description: Read or list a secret from the store by its path.
      operationId: get-secret
      parameters:
      - description: The backend store from which to get the secret.
        explode: false
        in: path
        name: store
        required: true
        schema:
          type: string
        style: simple
      - description: |
          If set to true, list only secret keys.
        explode: true
        in: query
        name: list
        required: false
        schema:
          type: string
        style: form
      - description: The path to store the secret in.
        explode: false
        in: path
        name: path-to-secret
        required: true
        schema:
          type: string
        style: simple
      responses:
        200:
          content:
            '*/*':
              schema:
                $ref: '#/components/schemas/Secret'
          description: Response body contains secret authorized content.
        400:
          description: Unsupported Accept header.
        403:
          description: Forbidden.
        404:
          description: Secret not found.
      summary: Read or list a secret from the store by its path.
      tags:
      - secrets
    patch:
      description: Update existing secret in the specified store.
      operationId: update-secret
      parameters:
      - description: The backend to store the secret in.
        explode: false
        in: path
        name: store
        required: true
        schema:
          type: string
        style: simple
      - description: The path for the secret to update.
        explode: false
        in: path
        name: path-to-secret
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Secret'
      responses:
        204:
          description: Secret updated.
        403:
          description: Forbidden.
        404:
          description: Secret not found.
      summary: Update secret.
      tags:
      - secrets
    put:
      description: Create a secret in the store at the path.
      operationId: create-secret
      parameters:
      - description: The backend to store the secret in.
        explode: false
        in: path
        name: store
        required: true
        schema:
          type: string
        style: simple
      - description: The path to store the secret in.
        explode: false
        in: path
        name: path-to-secret
        required: true
        schema:
          type: string
        style: simple
      requestBody:
        $ref: '#/components/requestBodies/Secret'
      responses:
        201:
          description: Secret created.
        400:
          description: Unsupported Content-Type header.
        403:
          description: Forbidden.
        409:
          description: Secret already exists.
      summary: Create a secret in the store at the path.
      tags:
      - secrets
components:
  requestBodies:
    Secret:
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Secret'
      description: Secret value.
      required: true
  schemas:
    Secret:
      additionalProperties: false
      example:
        value: value
      properties:
        value:
          type: string
      type: object
  securitySchemes:
    token:
      in: header
      name: Authorization
      type: apiKey
