// Code generated by go-swagger; DO NOT EDIT.

package ldap

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PostLdapImportuserReader is a Reader for the PostLdapImportuser structure.
type PostLdapImportuserReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PostLdapImportuserReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPostLdapImportuserCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 400:
		result := NewPostLdapImportuserBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPostLdapImportuserCreated creates a PostLdapImportuserCreated with default headers values
func NewPostLdapImportuserCreated() *PostLdapImportuserCreated {
	return &PostLdapImportuserCreated{}
}

/*PostLdapImportuserCreated handles this case with default header values.

Success.
*/
type PostLdapImportuserCreated struct {
}

func (o *PostLdapImportuserCreated) Error() string {
	return fmt.Sprintf("[POST /ldap/importuser][%d] postLdapImportuserCreated ", 201)
}

func (o *PostLdapImportuserCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPostLdapImportuserBadRequest creates a PostLdapImportuserBadRequest with default headers values
func NewPostLdapImportuserBadRequest() *PostLdapImportuserBadRequest {
	return &PostLdapImportuserBadRequest{}
}

/*PostLdapImportuserBadRequest handles this case with default header values.

Various errors. If no directory back-end has been configured yet, the custom error code `ERR_LDAP_CONFIG_NOT_AVAILABLE` is set in the response. If there was no LDAP search result or an error occured during the search process, one of the custom error codes `ERR_LDAP_IMPORT_USER_NOT_FOUND` and `ERR_LDAP_IMPORT_SEARCH_FAILED` is set in the response, and a description is provided to report the problem specifics.
*/
type PostLdapImportuserBadRequest struct {
}

func (o *PostLdapImportuserBadRequest) Error() string {
	return fmt.Sprintf("[POST /ldap/importuser][%d] postLdapImportuserBadRequest ", 400)
}

func (o *PostLdapImportuserBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
