// Code generated by go-swagger; DO NOT EDIT.

package oidc

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// GetAuthOidcCallbackReader is a Reader for the GetAuthOidcCallback structure.
type GetAuthOidcCallbackReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *GetAuthOidcCallbackReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 302:
		result := NewGetAuthOidcCallbackFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	case 401:
		result := NewGetAuthOidcCallbackUnauthorized()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewGetAuthOidcCallbackFound creates a GetAuthOidcCallbackFound with default headers values
func NewGetAuthOidcCallbackFound() *GetAuthOidcCallbackFound {
	return &GetAuthOidcCallbackFound{}
}

/*GetAuthOidcCallbackFound handles this case with default header values.

OIDC authentication flow successful.
*/
type GetAuthOidcCallbackFound struct {
}

func (o *GetAuthOidcCallbackFound) Error() string {
	return fmt.Sprintf("[GET /auth/oidc/callback][%d] getAuthOidcCallbackFound ", 302)
}

func (o *GetAuthOidcCallbackFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewGetAuthOidcCallbackUnauthorized creates a GetAuthOidcCallbackUnauthorized with default headers values
func NewGetAuthOidcCallbackUnauthorized() *GetAuthOidcCallbackUnauthorized {
	return &GetAuthOidcCallbackUnauthorized{}
}

/*GetAuthOidcCallbackUnauthorized handles this case with default header values.

Problem in authentication flow.
*/
type GetAuthOidcCallbackUnauthorized struct {
}

func (o *GetAuthOidcCallbackUnauthorized) Error() string {
	return fmt.Sprintf("[GET /auth/oidc/callback][%d] getAuthOidcCallbackUnauthorized ", 401)
}

func (o *GetAuthOidcCallbackUnauthorized) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
