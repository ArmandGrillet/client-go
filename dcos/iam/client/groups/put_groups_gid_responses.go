// Code generated by go-swagger; DO NOT EDIT.

package groups

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"

	"github.com/go-openapi/runtime"

	strfmt "github.com/go-openapi/strfmt"
)

// PutGroupsGidReader is a Reader for the PutGroupsGid structure.
type PutGroupsGidReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *PutGroupsGidReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {

	case 201:
		result := NewPutGroupsGidCreated()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil

	case 409:
		result := NewPutGroupsGidConflict()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("unknown error", response, response.Code())
	}
}

// NewPutGroupsGidCreated creates a PutGroupsGidCreated with default headers values
func NewPutGroupsGidCreated() *PutGroupsGidCreated {
	return &PutGroupsGidCreated{}
}

/*PutGroupsGidCreated handles this case with default header values.

Group created.
*/
type PutGroupsGidCreated struct {
}

func (o *PutGroupsGidCreated) Error() string {
	return fmt.Sprintf("[PUT /groups/{gid}][%d] putGroupsGidCreated ", 201)
}

func (o *PutGroupsGidCreated) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}

// NewPutGroupsGidConflict creates a PutGroupsGidConflict with default headers values
func NewPutGroupsGidConflict() *PutGroupsGidConflict {
	return &PutGroupsGidConflict{}
}

/*PutGroupsGidConflict handles this case with default header values.

Group exists.
*/
type PutGroupsGidConflict struct {
}

func (o *PutGroupsGidConflict) Error() string {
	return fmt.Sprintf("[PUT /groups/{gid}][%d] putGroupsGidConflict ", 409)
}

func (o *PutGroupsGidConflict) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	return nil
}
