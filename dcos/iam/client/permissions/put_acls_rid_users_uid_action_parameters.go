// Code generated by go-swagger; DO NOT EDIT.

package permissions

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"
)

// NewPutAclsRidUsersUIDActionParams creates a new PutAclsRidUsersUIDActionParams object
// with the default values initialized.
func NewPutAclsRidUsersUIDActionParams() *PutAclsRidUsersUIDActionParams {
	var ()
	return &PutAclsRidUsersUIDActionParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPutAclsRidUsersUIDActionParamsWithTimeout creates a new PutAclsRidUsersUIDActionParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPutAclsRidUsersUIDActionParamsWithTimeout(timeout time.Duration) *PutAclsRidUsersUIDActionParams {
	var ()
	return &PutAclsRidUsersUIDActionParams{

		timeout: timeout,
	}
}

// NewPutAclsRidUsersUIDActionParamsWithContext creates a new PutAclsRidUsersUIDActionParams object
// with the default values initialized, and the ability to set a context for a request
func NewPutAclsRidUsersUIDActionParamsWithContext(ctx context.Context) *PutAclsRidUsersUIDActionParams {
	var ()
	return &PutAclsRidUsersUIDActionParams{

		Context: ctx,
	}
}

// NewPutAclsRidUsersUIDActionParamsWithHTTPClient creates a new PutAclsRidUsersUIDActionParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPutAclsRidUsersUIDActionParamsWithHTTPClient(client *http.Client) *PutAclsRidUsersUIDActionParams {
	var ()
	return &PutAclsRidUsersUIDActionParams{
		HTTPClient: client,
	}
}

/*PutAclsRidUsersUIDActionParams contains all the parameters to send to the API endpoint
for the put acls rid users UID action operation typically these are written to a http.Request
*/
type PutAclsRidUsersUIDActionParams struct {

	/*Action
	  action name

	*/
	Action string
	/*Rid
	  resource ID.

	*/
	Rid string
	/*UID
	  account ID.

	*/
	UID string

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the put acls rid users UID action params
func (o *PutAclsRidUsersUIDActionParams) WithTimeout(timeout time.Duration) *PutAclsRidUsersUIDActionParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the put acls rid users UID action params
func (o *PutAclsRidUsersUIDActionParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the put acls rid users UID action params
func (o *PutAclsRidUsersUIDActionParams) WithContext(ctx context.Context) *PutAclsRidUsersUIDActionParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the put acls rid users UID action params
func (o *PutAclsRidUsersUIDActionParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the put acls rid users UID action params
func (o *PutAclsRidUsersUIDActionParams) WithHTTPClient(client *http.Client) *PutAclsRidUsersUIDActionParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the put acls rid users UID action params
func (o *PutAclsRidUsersUIDActionParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithAction adds the action to the put acls rid users UID action params
func (o *PutAclsRidUsersUIDActionParams) WithAction(action string) *PutAclsRidUsersUIDActionParams {
	o.SetAction(action)
	return o
}

// SetAction adds the action to the put acls rid users UID action params
func (o *PutAclsRidUsersUIDActionParams) SetAction(action string) {
	o.Action = action
}

// WithRid adds the rid to the put acls rid users UID action params
func (o *PutAclsRidUsersUIDActionParams) WithRid(rid string) *PutAclsRidUsersUIDActionParams {
	o.SetRid(rid)
	return o
}

// SetRid adds the rid to the put acls rid users UID action params
func (o *PutAclsRidUsersUIDActionParams) SetRid(rid string) {
	o.Rid = rid
}

// WithUID adds the uid to the put acls rid users UID action params
func (o *PutAclsRidUsersUIDActionParams) WithUID(uid string) *PutAclsRidUsersUIDActionParams {
	o.SetUID(uid)
	return o
}

// SetUID adds the uid to the put acls rid users UID action params
func (o *PutAclsRidUsersUIDActionParams) SetUID(uid string) {
	o.UID = uid
}

// WriteToRequest writes these params to a swagger request
func (o *PutAclsRidUsersUIDActionParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	// path param action
	if err := r.SetPathParam("action", o.Action); err != nil {
		return err
	}

	// path param rid
	if err := r.SetPathParam("rid", o.Rid); err != nil {
		return err
	}

	// path param uid
	if err := r.SetPathParam("uid", o.UID); err != nil {
		return err
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
