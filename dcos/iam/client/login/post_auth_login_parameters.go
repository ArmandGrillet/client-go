// Code generated by go-swagger; DO NOT EDIT.

package login

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"context"
	"net/http"
	"time"

	"github.com/go-openapi/errors"
	"github.com/go-openapi/runtime"
	cr "github.com/go-openapi/runtime/client"

	strfmt "github.com/go-openapi/strfmt"

	models "github.com/dcos/client-go/dcos/iam/models"
)

// NewPostAuthLoginParams creates a new PostAuthLoginParams object
// with the default values initialized.
func NewPostAuthLoginParams() *PostAuthLoginParams {
	var ()
	return &PostAuthLoginParams{

		timeout: cr.DefaultTimeout,
	}
}

// NewPostAuthLoginParamsWithTimeout creates a new PostAuthLoginParams object
// with the default values initialized, and the ability to set a timeout on a request
func NewPostAuthLoginParamsWithTimeout(timeout time.Duration) *PostAuthLoginParams {
	var ()
	return &PostAuthLoginParams{

		timeout: timeout,
	}
}

// NewPostAuthLoginParamsWithContext creates a new PostAuthLoginParams object
// with the default values initialized, and the ability to set a context for a request
func NewPostAuthLoginParamsWithContext(ctx context.Context) *PostAuthLoginParams {
	var ()
	return &PostAuthLoginParams{

		Context: ctx,
	}
}

// NewPostAuthLoginParamsWithHTTPClient creates a new PostAuthLoginParams object
// with the default values initialized, and the ability to set a custom HTTPClient for a request
func NewPostAuthLoginParamsWithHTTPClient(client *http.Client) *PostAuthLoginParams {
	var ()
	return &PostAuthLoginParams{
		HTTPClient: client,
	}
}

/*PostAuthLoginParams contains all the parameters to send to the API endpoint
for the post auth login operation typically these are written to a http.Request
*/
type PostAuthLoginParams struct {

	/*LoginObject
	  uid & password or uid & service login token.

	*/
	LoginObject *models.LoginObject

	timeout    time.Duration
	Context    context.Context
	HTTPClient *http.Client
}

// WithTimeout adds the timeout to the post auth login params
func (o *PostAuthLoginParams) WithTimeout(timeout time.Duration) *PostAuthLoginParams {
	o.SetTimeout(timeout)
	return o
}

// SetTimeout adds the timeout to the post auth login params
func (o *PostAuthLoginParams) SetTimeout(timeout time.Duration) {
	o.timeout = timeout
}

// WithContext adds the context to the post auth login params
func (o *PostAuthLoginParams) WithContext(ctx context.Context) *PostAuthLoginParams {
	o.SetContext(ctx)
	return o
}

// SetContext adds the context to the post auth login params
func (o *PostAuthLoginParams) SetContext(ctx context.Context) {
	o.Context = ctx
}

// WithHTTPClient adds the HTTPClient to the post auth login params
func (o *PostAuthLoginParams) WithHTTPClient(client *http.Client) *PostAuthLoginParams {
	o.SetHTTPClient(client)
	return o
}

// SetHTTPClient adds the HTTPClient to the post auth login params
func (o *PostAuthLoginParams) SetHTTPClient(client *http.Client) {
	o.HTTPClient = client
}

// WithLoginObject adds the loginObject to the post auth login params
func (o *PostAuthLoginParams) WithLoginObject(loginObject *models.LoginObject) *PostAuthLoginParams {
	o.SetLoginObject(loginObject)
	return o
}

// SetLoginObject adds the loginObject to the post auth login params
func (o *PostAuthLoginParams) SetLoginObject(loginObject *models.LoginObject) {
	o.LoginObject = loginObject
}

// WriteToRequest writes these params to a swagger request
func (o *PostAuthLoginParams) WriteToRequest(r runtime.ClientRequest, reg strfmt.Registry) error {

	if err := r.SetTimeout(o.timeout); err != nil {
		return err
	}
	var res []error

	if o.LoginObject != nil {
		if err := r.SetBodyParam(o.LoginObject); err != nil {
			return err
		}
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}
